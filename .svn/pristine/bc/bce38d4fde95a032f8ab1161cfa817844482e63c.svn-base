package com.newlecture.web.controller.customer;

import java.io.IOException;
import java.time.Instant;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.newlecture.web.entity.Users;
import com.newlecture.web.service.UsersService;

@Controller
@RequestMapping("/")
public class HomeController {
	
	// '/' -> WEB-INF JSP ViewResolver 2순위
	// '.' -> TilesViewResolver 1순위
	
	@Autowired
	private UsersService usersService;
	
	// 메인 페이지 이동
	@RequestMapping("")
	public String index() {
		
		return "customer.index";
	}
	
	// 상품 목록 페이지 이동
	@RequestMapping("/list")
	public String list() {
		
		return "customer.list";
	}
	
	// 상품 조회 페이지 이동
	@RequestMapping("/detail")
	public String detail() {
		return "customer.detail";
	}
	
	// 장바구니 조회 페이지 이동
	@RequestMapping("/cart")
	public String cart() {
		
		return "customer.cart";
	}
	
	// 결제 페이지 이동
	@RequestMapping("/checkout")
	public String checkOut() {
		
		return "customer.checkout";
	}
	
	// contact 페이지 이동
	@RequestMapping("/contact")
	public String contact() {
		
		return "customer.contact";
	}
	
	// 주문목록 페이지 이동
	@RequestMapping("/orderlist")
	public String orderList() {
		return "customer.orderlist";
	}
	
	// 로그인 페이지 이동
	@RequestMapping("/login")
	public String login() {
		
		return "customer/login";
	}
	
	// 로그인 처리
	@RequestMapping("/customer/login")
	public String loginCheck() {
		return "";
	}
	
	// 회원가입 페이지 이동
	@RequestMapping("/signup")
	public String signUp() {
		
		return "customer/signup";
	}
	
	// 회원가입 처리후 index 페이지 이동
	@RequestMapping("/customer/signup")
	public String signUpDo(HttpServletRequest request) throws ServletException, IOException{
		
		String name = request.getParameter("name");
		String addr = request.getParameter("addr");
		String phone = request.getParameter("phone");
		String email = request.getParameter("email");
		String crePassword = request.getParameter("crePassword");
		String rePassword = request.getParameter("rePassword");
		usersService.signUp(new Users(0, name, rePassword, name, phone, 0, Date.from(Instant.now()), addr));
		
		
		return "redirect:/"; // customer/signup.do url이 유지되면 안되므로 redirect 처리함
	}
}
